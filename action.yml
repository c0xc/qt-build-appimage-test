name: 'build-qt-pipeline-action'
description: 'Creates a Qt build container and builds the application.'
branding:
  icon: 'command'
  color: 'red'
inputs:
  recipe:
    description: 'file with build parameters'
    default: '.build_pipe_vars.sh'
  os_name:
    description: ''
    default: 'fedora'
  os_release:
    description: ''
    default: '30'
  no_qt_build:
    description: ''
    default: false
runs:
  using: 'composite'
  steps:
    - run: echo init build action on ${{ inputs.os_name }}/${{ inputs.os_release }}
      shell: bash
    - run: echo PLATT=${{ inputs.os_name }} >/tmp/ENV_OS_NAME
      shell: bash
    - run: pwd; ls -la; cat /etc/os-release
      shell: bash
    - run: cp -v ${{ inputs.recipe }} ${{ github.action_path }}/
      shell: bash
    - run: echo action${{ github.action_path }}; ls -la ${{ github.action_path }}
      shell: bash
    - run: echo workspace ${{ github.workspace }}; ls -la ${{ github.workspace }}
      shell: bash
    - run: docker --version
      shell: bash
    - run: cd ${{ github.action_path }} && docker build -t build-container --build-arg os_name=${{ inputs.os_name }} --build-arg os_release=${{ inputs.os_release }} --build-arg no_qt_build=${{ inputs.no_qt_build }} .
      shell: bash
    - run: cd ${{ github.action_path }} && docker run -t build-container -v ${{ github.workspace }}:/workspace 
      shell: bash
      env: |
        GITHUB_WORKSPACE=${{ github.workspace }}
    #- uses: ./.github/actions/multibuild
